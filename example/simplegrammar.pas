unit SimpleGrammar;

// Grammar generated from CGT using GOLD Parser Tools: https://github.com/Warfley/gold-parser-tools

{$mode ObjFPC}{$H+}

interface

uses
  Classes, SysUtils, lexer, parser, cgtgrammar;

type
  TSimple = class(TCGTGrammar)
  public
    constructor Create;
  end;

implementation

constructor TSimple.Create;
var
  SymbolList: TGrammarSymbolList;
begin
  inherited Create;
  SymbolList := TGrammarSymbolList.Create;
  try
    FVersion := gv5;
    FParameter.Add('Name', 'Simple');
    FParameter.Add('Version', '1');
    FParameter.Add('Author', 'Frederic Kehrein');
    FParameter.Add('About', 'Simple Test Language');
    FParameter.Add('Character Set', 'Unicode');
    FParameter.Add('Character Mapping', 'Windows-1252');
    FParameter.Add('Generated By', 'GOLD Parser Builder 5.2.0.');
    FParameter.Add('Generated Date', '2023-01-29 02:34');
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(10, 10)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(13, 13)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(8232, 8232)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(8233, 8233)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(9, 9),
      CodepointRange(11, 12),
      CodepointRange(32, 32),
      CodepointRange(133, 133),
      CodepointRange(160, 160),
      CodepointRange(5760, 5760),
      CodepointRange(6158, 6158),
      CodepointRange(8192, 8202),
      CodepointRange(8230, 8230),
      CodepointRange(8239, 8239),
      CodepointRange(8287, 8287),
      CodepointRange(12288, 12288)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(33, 33)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(40, 40)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(41, 41)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(42, 42)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(43, 43)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(44, 44)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(45, 45)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(58, 58)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(59, 59)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(61, 61)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(49, 57)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 99),
      CodepointRange(103, 115),
      CodepointRange(117, 118),
      CodepointRange(120, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(47, 47)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 48)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(60, 60)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(62, 62)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(100, 100)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(101, 101)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(102, 102)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(116, 116)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(119, 119)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(120, 120)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 70),
      CodepointRange(97, 102)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 110),
      CodepointRange(112, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(111, 111)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 109),
      CodepointRange(111, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(110, 110)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 99),
      CodepointRange(101, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(98, 110),
      CodepointRange(112, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(97, 97)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 107),
      CodepointRange(109, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(108, 108)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 114),
      CodepointRange(116, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(115, 115)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 100),
      CodepointRange(102, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 113),
      CodepointRange(115, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(114, 114)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 110),
      CodepointRange(112, 113),
      CodepointRange(115, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 116),
      CodepointRange(118, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(117, 117)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 103),
      CodepointRange(105, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(104, 104)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(48, 57),
      CodepointRange(65, 90),
      CodepointRange(95, 95),
      CodepointRange(97, 104),
      CodepointRange(106, 122)
    ]));
    FDFA.AddCharset(TRangeCharset.FromArray(0, [
      CodepointRange(105, 105)
    ]));

    SymbolList.Add(Symbol(SymbolList.Count, 'EOF', TSymbolType(3)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Error', TSymbolType(7)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Comment', TSymbolType(2)));
    SymbolList.Add(Symbol(SymbolList.Count, 'NewLine', TSymbolType(2)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Whitespace', TSymbolType(2)));
    SymbolList.Add(Symbol(SymbolList.Count, '//', TSymbolType(4)));
    SymbolList.Add(Symbol(SymbolList.Count, '!=', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '(', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, ')', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '*', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '+', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, ',', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '-', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '/', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, ':=', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, ';', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '<', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '<=', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '=', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '>', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, '>=', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'DecimanlNumber', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'do', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'end', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'false', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'for', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'HexNumber', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Identifier', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'to', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'true', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'while', TSymbolType(1)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Assignment', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Constant', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Expression', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Expressions', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'For Loop', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Function Call', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Operator', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Parameter', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Statement', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'Statements', TSymbolType(0)));
    SymbolList.Add(Symbol(SymbolList.Count, 'While Loop', TSymbolType(0)));

    FDFA.AddState(-1, [
      DFAEdge(0, 1),
      DFAEdge(1, 2),
      DFAEdge(2, 4),
      DFAEdge(3, 5),
      DFAEdge(4, 6),
      DFAEdge(5, 7),
      DFAEdge(6, 9),
      DFAEdge(7, 10),
      DFAEdge(8, 11),
      DFAEdge(9, 12),
      DFAEdge(10, 13),
      DFAEdge(11, 14),
      DFAEdge(12, 15),
      DFAEdge(13, 17),
      DFAEdge(14, 18),
      DFAEdge(15, 19),
      DFAEdge(16, 20),
      DFAEdge(17, 22),
      DFAEdge(18, 24),
      DFAEdge(19, 27),
      DFAEdge(20, 29),
      DFAEdge(21, 31),
      DFAEdge(22, 33),
      DFAEdge(23, 36),
      DFAEdge(24, 43),
      DFAEdge(25, 48)
    ]);
    FDFA.AddState(3, [

    ]);
    FDFA.AddState(3, [
      DFAEdge(0, 3)
    ]);
    FDFA.AddState(3, [

    ]);
    FDFA.AddState(3, [

    ]);
    FDFA.AddState(3, [

    ]);
    FDFA.AddState(4, [
      DFAEdge(4, 6)
    ]);
    FDFA.AddState(-1, [
      DFAEdge(14, 8)
    ]);
    FDFA.AddState(6, [

    ]);
    FDFA.AddState(7, [

    ]);
    FDFA.AddState(8, [

    ]);
    FDFA.AddState(9, [

    ]);
    FDFA.AddState(10, [

    ]);
    FDFA.AddState(11, [

    ]);
    FDFA.AddState(12, [

    ]);
    FDFA.AddState(-1, [
      DFAEdge(14, 16)
    ]);
    FDFA.AddState(14, [

    ]);
    FDFA.AddState(15, [

    ]);
    FDFA.AddState(18, [

    ]);
    FDFA.AddState(21, [
      DFAEdge(26, 19)
    ]);
    FDFA.AddState(27, [
      DFAEdge(27, 21)
    ]);
    FDFA.AddState(27, [
      DFAEdge(27, 21)
    ]);
    FDFA.AddState(13, [
      DFAEdge(17, 23)
    ]);
    FDFA.AddState(5, [

    ]);
    FDFA.AddState(21, [
      DFAEdge(26, 19),
      DFAEdge(28, 25)
    ]);
    FDFA.AddState(-1, [
      DFAEdge(29, 26)
    ]);
    FDFA.AddState(26, [
      DFAEdge(29, 26)
    ]);
    FDFA.AddState(16, [
      DFAEdge(14, 28)
    ]);
    FDFA.AddState(17, [

    ]);
    FDFA.AddState(19, [
      DFAEdge(14, 30)
    ]);
    FDFA.AddState(20, [

    ]);
    FDFA.AddState(27, [
      DFAEdge(30, 21),
      DFAEdge(31, 32)
    ]);
    FDFA.AddState(22, [
      DFAEdge(27, 21)
    ]);
    FDFA.AddState(27, [
      DFAEdge(32, 21),
      DFAEdge(33, 34)
    ]);
    FDFA.AddState(27, [
      DFAEdge(34, 21),
      DFAEdge(21, 35)
    ]);
    FDFA.AddState(23, [
      DFAEdge(27, 21)
    ]);
    FDFA.AddState(27, [
      DFAEdge(35, 21),
      DFAEdge(36, 37),
      DFAEdge(31, 41)
    ]);
    FDFA.AddState(27, [
      DFAEdge(37, 21),
      DFAEdge(38, 38)
    ]);
    FDFA.AddState(27, [
      DFAEdge(39, 21),
      DFAEdge(40, 39)
    ]);
    FDFA.AddState(27, [
      DFAEdge(41, 21),
      DFAEdge(22, 40)
    ]);
    FDFA.AddState(24, [
      DFAEdge(27, 21)
    ]);
    FDFA.AddState(27, [
      DFAEdge(42, 21),
      DFAEdge(43, 42)
    ]);
    FDFA.AddState(25, [
      DFAEdge(27, 21)
    ]);
    FDFA.AddState(27, [
      DFAEdge(44, 21),
      DFAEdge(31, 44),
      DFAEdge(43, 45)
    ]);
    FDFA.AddState(28, [
      DFAEdge(27, 21)
    ]);
    FDFA.AddState(27, [
      DFAEdge(45, 21),
      DFAEdge(46, 46)
    ]);
    FDFA.AddState(27, [
      DFAEdge(41, 21),
      DFAEdge(22, 47)
    ]);
    FDFA.AddState(29, [
      DFAEdge(27, 21)
    ]);
    FDFA.AddState(27, [
      DFAEdge(47, 21),
      DFAEdge(48, 49)
    ]);
    FDFA.AddState(27, [
      DFAEdge(49, 21),
      DFAEdge(50, 50)
    ]);
    FDFA.AddState(27, [
      DFAEdge(37, 21),
      DFAEdge(38, 51)
    ]);
    FDFA.AddState(27, [
      DFAEdge(41, 21),
      DFAEdge(22, 52)
    ]);
    FDFA.AddState(30, [
      DFAEdge(27, 21)
    ]);

    FLALR.AddState(TLRState.Create([
      LRTransition(25, TLRActionType(1), 1),
      LRTransition(27, TLRActionType(1), 2),
      LRTransition(30, TLRActionType(1), 3),
      LRTransition(31, TLRActionType(3), 4),
      LRTransition(35, TLRActionType(3), 5),
      LRTransition(36, TLRActionType(3), 6),
      LRTransition(39, TLRActionType(3), 7),
      LRTransition(40, TLRActionType(3), 8),
      LRTransition(41, TLRActionType(3), 9),
      LRTransition(0, TLRActionType(2), 1)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(27, TLRActionType(1), 10)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 11),
      LRTransition(14, TLRActionType(1), 12)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 13),
      LRTransition(21, TLRActionType(1), 14),
      LRTransition(24, TLRActionType(1), 15),
      LRTransition(26, TLRActionType(1), 16),
      LRTransition(27, TLRActionType(1), 17),
      LRTransition(29, TLRActionType(1), 18),
      LRTransition(32, TLRActionType(3), 19),
      LRTransition(33, TLRActionType(3), 20)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(15, TLRActionType(2), 2)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(15, TLRActionType(2), 4)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(15, TLRActionType(2), 5)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(15, TLRActionType(1), 21)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(0, TLRActionType(4), 0)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(15, TLRActionType(2), 3)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(14, TLRActionType(1), 22)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 13),
      LRTransition(21, TLRActionType(1), 14),
      LRTransition(24, TLRActionType(1), 15),
      LRTransition(26, TLRActionType(1), 16),
      LRTransition(27, TLRActionType(1), 17),
      LRTransition(29, TLRActionType(1), 18),
      LRTransition(32, TLRActionType(3), 19),
      LRTransition(33, TLRActionType(3), 23),
      LRTransition(34, TLRActionType(3), 24),
      LRTransition(38, TLRActionType(3), 25),
      LRTransition(8, TLRActionType(2), 11)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 13),
      LRTransition(21, TLRActionType(1), 14),
      LRTransition(24, TLRActionType(1), 15),
      LRTransition(26, TLRActionType(1), 16),
      LRTransition(27, TLRActionType(1), 17),
      LRTransition(29, TLRActionType(1), 18),
      LRTransition(32, TLRActionType(3), 19),
      LRTransition(33, TLRActionType(3), 26)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 13),
      LRTransition(21, TLRActionType(1), 14),
      LRTransition(24, TLRActionType(1), 15),
      LRTransition(26, TLRActionType(1), 16),
      LRTransition(27, TLRActionType(1), 17),
      LRTransition(29, TLRActionType(1), 18),
      LRTransition(32, TLRActionType(3), 19),
      LRTransition(33, TLRActionType(3), 27)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(2), 28),
      LRTransition(8, TLRActionType(2), 28),
      LRTransition(9, TLRActionType(2), 28),
      LRTransition(10, TLRActionType(2), 28),
      LRTransition(11, TLRActionType(2), 28),
      LRTransition(12, TLRActionType(2), 28),
      LRTransition(13, TLRActionType(2), 28),
      LRTransition(15, TLRActionType(2), 28),
      LRTransition(16, TLRActionType(2), 28),
      LRTransition(17, TLRActionType(2), 28),
      LRTransition(18, TLRActionType(2), 28),
      LRTransition(19, TLRActionType(2), 28),
      LRTransition(20, TLRActionType(2), 28),
      LRTransition(22, TLRActionType(2), 28),
      LRTransition(28, TLRActionType(2), 28)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(2), 31),
      LRTransition(8, TLRActionType(2), 31),
      LRTransition(9, TLRActionType(2), 31),
      LRTransition(10, TLRActionType(2), 31),
      LRTransition(11, TLRActionType(2), 31),
      LRTransition(12, TLRActionType(2), 31),
      LRTransition(13, TLRActionType(2), 31),
      LRTransition(15, TLRActionType(2), 31),
      LRTransition(16, TLRActionType(2), 31),
      LRTransition(17, TLRActionType(2), 31),
      LRTransition(18, TLRActionType(2), 31),
      LRTransition(19, TLRActionType(2), 31),
      LRTransition(20, TLRActionType(2), 31),
      LRTransition(22, TLRActionType(2), 31),
      LRTransition(28, TLRActionType(2), 31)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(2), 29),
      LRTransition(8, TLRActionType(2), 29),
      LRTransition(9, TLRActionType(2), 29),
      LRTransition(10, TLRActionType(2), 29),
      LRTransition(11, TLRActionType(2), 29),
      LRTransition(12, TLRActionType(2), 29),
      LRTransition(13, TLRActionType(2), 29),
      LRTransition(15, TLRActionType(2), 29),
      LRTransition(16, TLRActionType(2), 29),
      LRTransition(17, TLRActionType(2), 29),
      LRTransition(18, TLRActionType(2), 29),
      LRTransition(19, TLRActionType(2), 29),
      LRTransition(20, TLRActionType(2), 29),
      LRTransition(22, TLRActionType(2), 29),
      LRTransition(28, TLRActionType(2), 29)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(2), 17),
      LRTransition(8, TLRActionType(2), 17),
      LRTransition(9, TLRActionType(2), 17),
      LRTransition(10, TLRActionType(2), 17),
      LRTransition(11, TLRActionType(2), 17),
      LRTransition(12, TLRActionType(2), 17),
      LRTransition(13, TLRActionType(2), 17),
      LRTransition(15, TLRActionType(2), 17),
      LRTransition(16, TLRActionType(2), 17),
      LRTransition(17, TLRActionType(2), 17),
      LRTransition(18, TLRActionType(2), 17),
      LRTransition(19, TLRActionType(2), 17),
      LRTransition(20, TLRActionType(2), 17),
      LRTransition(22, TLRActionType(2), 17),
      LRTransition(28, TLRActionType(2), 17)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(2), 30),
      LRTransition(8, TLRActionType(2), 30),
      LRTransition(9, TLRActionType(2), 30),
      LRTransition(10, TLRActionType(2), 30),
      LRTransition(11, TLRActionType(2), 30),
      LRTransition(12, TLRActionType(2), 30),
      LRTransition(13, TLRActionType(2), 30),
      LRTransition(15, TLRActionType(2), 30),
      LRTransition(16, TLRActionType(2), 30),
      LRTransition(17, TLRActionType(2), 30),
      LRTransition(18, TLRActionType(2), 30),
      LRTransition(19, TLRActionType(2), 30),
      LRTransition(20, TLRActionType(2), 30),
      LRTransition(22, TLRActionType(2), 30),
      LRTransition(28, TLRActionType(2), 30)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(2), 16),
      LRTransition(8, TLRActionType(2), 16),
      LRTransition(9, TLRActionType(2), 16),
      LRTransition(10, TLRActionType(2), 16),
      LRTransition(11, TLRActionType(2), 16),
      LRTransition(12, TLRActionType(2), 16),
      LRTransition(13, TLRActionType(2), 16),
      LRTransition(15, TLRActionType(2), 16),
      LRTransition(16, TLRActionType(2), 16),
      LRTransition(17, TLRActionType(2), 16),
      LRTransition(18, TLRActionType(2), 16),
      LRTransition(19, TLRActionType(2), 16),
      LRTransition(20, TLRActionType(2), 16),
      LRTransition(22, TLRActionType(2), 16),
      LRTransition(28, TLRActionType(2), 16)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(1), 28),
      LRTransition(9, TLRActionType(1), 29),
      LRTransition(10, TLRActionType(1), 30),
      LRTransition(12, TLRActionType(1), 31),
      LRTransition(13, TLRActionType(1), 32),
      LRTransition(16, TLRActionType(1), 33),
      LRTransition(17, TLRActionType(1), 34),
      LRTransition(18, TLRActionType(1), 35),
      LRTransition(19, TLRActionType(1), 36),
      LRTransition(20, TLRActionType(1), 37),
      LRTransition(22, TLRActionType(1), 38),
      LRTransition(37, TLRActionType(3), 39)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(25, TLRActionType(1), 1),
      LRTransition(27, TLRActionType(1), 2),
      LRTransition(30, TLRActionType(1), 3),
      LRTransition(31, TLRActionType(3), 4),
      LRTransition(35, TLRActionType(3), 5),
      LRTransition(36, TLRActionType(3), 6),
      LRTransition(39, TLRActionType(3), 7),
      LRTransition(40, TLRActionType(3), 40),
      LRTransition(41, TLRActionType(3), 9),
      LRTransition(0, TLRActionType(2), 1),
      LRTransition(23, TLRActionType(2), 1)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 13),
      LRTransition(21, TLRActionType(1), 14),
      LRTransition(24, TLRActionType(1), 15),
      LRTransition(26, TLRActionType(1), 16),
      LRTransition(27, TLRActionType(1), 17),
      LRTransition(29, TLRActionType(1), 18),
      LRTransition(32, TLRActionType(3), 19),
      LRTransition(33, TLRActionType(3), 41)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(1), 28),
      LRTransition(9, TLRActionType(1), 29),
      LRTransition(10, TLRActionType(1), 30),
      LRTransition(11, TLRActionType(1), 42),
      LRTransition(12, TLRActionType(1), 31),
      LRTransition(13, TLRActionType(1), 32),
      LRTransition(16, TLRActionType(1), 33),
      LRTransition(17, TLRActionType(1), 34),
      LRTransition(18, TLRActionType(1), 35),
      LRTransition(19, TLRActionType(1), 36),
      LRTransition(20, TLRActionType(1), 37),
      LRTransition(37, TLRActionType(3), 39),
      LRTransition(8, TLRActionType(2), 13)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(8, TLRActionType(2), 10)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(8, TLRActionType(1), 43)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(1), 28),
      LRTransition(9, TLRActionType(1), 29),
      LRTransition(10, TLRActionType(1), 30),
      LRTransition(12, TLRActionType(1), 31),
      LRTransition(13, TLRActionType(1), 32),
      LRTransition(16, TLRActionType(1), 33),
      LRTransition(17, TLRActionType(1), 34),
      LRTransition(18, TLRActionType(1), 35),
      LRTransition(19, TLRActionType(1), 36),
      LRTransition(20, TLRActionType(1), 37),
      LRTransition(37, TLRActionType(3), 39),
      LRTransition(15, TLRActionType(2), 6)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(1), 28),
      LRTransition(8, TLRActionType(1), 44),
      LRTransition(9, TLRActionType(1), 29),
      LRTransition(10, TLRActionType(1), 30),
      LRTransition(12, TLRActionType(1), 31),
      LRTransition(13, TLRActionType(1), 32),
      LRTransition(16, TLRActionType(1), 33),
      LRTransition(17, TLRActionType(1), 34),
      LRTransition(18, TLRActionType(1), 35),
      LRTransition(19, TLRActionType(1), 36),
      LRTransition(20, TLRActionType(1), 37),
      LRTransition(37, TLRActionType(3), 39)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 23),
      LRTransition(21, TLRActionType(2), 23),
      LRTransition(24, TLRActionType(2), 23),
      LRTransition(26, TLRActionType(2), 23),
      LRTransition(27, TLRActionType(2), 23),
      LRTransition(29, TLRActionType(2), 23)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 20),
      LRTransition(21, TLRActionType(2), 20),
      LRTransition(24, TLRActionType(2), 20),
      LRTransition(26, TLRActionType(2), 20),
      LRTransition(27, TLRActionType(2), 20),
      LRTransition(29, TLRActionType(2), 20)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 18),
      LRTransition(21, TLRActionType(2), 18),
      LRTransition(24, TLRActionType(2), 18),
      LRTransition(26, TLRActionType(2), 18),
      LRTransition(27, TLRActionType(2), 18),
      LRTransition(29, TLRActionType(2), 18)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 19),
      LRTransition(21, TLRActionType(2), 19),
      LRTransition(24, TLRActionType(2), 19),
      LRTransition(26, TLRActionType(2), 19),
      LRTransition(27, TLRActionType(2), 19),
      LRTransition(29, TLRActionType(2), 19)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 21),
      LRTransition(21, TLRActionType(2), 21),
      LRTransition(24, TLRActionType(2), 21),
      LRTransition(26, TLRActionType(2), 21),
      LRTransition(27, TLRActionType(2), 21),
      LRTransition(29, TLRActionType(2), 21)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 24),
      LRTransition(21, TLRActionType(2), 24),
      LRTransition(24, TLRActionType(2), 24),
      LRTransition(26, TLRActionType(2), 24),
      LRTransition(27, TLRActionType(2), 24),
      LRTransition(29, TLRActionType(2), 24)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 27),
      LRTransition(21, TLRActionType(2), 27),
      LRTransition(24, TLRActionType(2), 27),
      LRTransition(26, TLRActionType(2), 27),
      LRTransition(27, TLRActionType(2), 27),
      LRTransition(29, TLRActionType(2), 27)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 22),
      LRTransition(21, TLRActionType(2), 22),
      LRTransition(24, TLRActionType(2), 22),
      LRTransition(26, TLRActionType(2), 22),
      LRTransition(27, TLRActionType(2), 22),
      LRTransition(29, TLRActionType(2), 22)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 25),
      LRTransition(21, TLRActionType(2), 25),
      LRTransition(24, TLRActionType(2), 25),
      LRTransition(26, TLRActionType(2), 25),
      LRTransition(27, TLRActionType(2), 25),
      LRTransition(29, TLRActionType(2), 25)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(2), 26),
      LRTransition(21, TLRActionType(2), 26),
      LRTransition(24, TLRActionType(2), 26),
      LRTransition(26, TLRActionType(2), 26),
      LRTransition(27, TLRActionType(2), 26),
      LRTransition(29, TLRActionType(2), 26)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(25, TLRActionType(1), 1),
      LRTransition(27, TLRActionType(1), 2),
      LRTransition(30, TLRActionType(1), 3),
      LRTransition(31, TLRActionType(3), 4),
      LRTransition(35, TLRActionType(3), 5),
      LRTransition(36, TLRActionType(3), 6),
      LRTransition(39, TLRActionType(3), 7),
      LRTransition(40, TLRActionType(3), 45),
      LRTransition(41, TLRActionType(3), 9),
      LRTransition(23, TLRActionType(2), 1)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 13),
      LRTransition(21, TLRActionType(1), 14),
      LRTransition(24, TLRActionType(1), 15),
      LRTransition(26, TLRActionType(1), 16),
      LRTransition(27, TLRActionType(1), 17),
      LRTransition(29, TLRActionType(1), 18),
      LRTransition(32, TLRActionType(3), 19),
      LRTransition(33, TLRActionType(3), 46)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(0, TLRActionType(2), 0),
      LRTransition(23, TLRActionType(2), 0)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(1), 28),
      LRTransition(9, TLRActionType(1), 29),
      LRTransition(10, TLRActionType(1), 30),
      LRTransition(12, TLRActionType(1), 31),
      LRTransition(13, TLRActionType(1), 32),
      LRTransition(16, TLRActionType(1), 33),
      LRTransition(17, TLRActionType(1), 34),
      LRTransition(18, TLRActionType(1), 35),
      LRTransition(19, TLRActionType(1), 36),
      LRTransition(20, TLRActionType(1), 37),
      LRTransition(28, TLRActionType(1), 47),
      LRTransition(37, TLRActionType(3), 39)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 13),
      LRTransition(21, TLRActionType(1), 14),
      LRTransition(24, TLRActionType(1), 15),
      LRTransition(26, TLRActionType(1), 16),
      LRTransition(27, TLRActionType(1), 17),
      LRTransition(29, TLRActionType(1), 18),
      LRTransition(32, TLRActionType(3), 19),
      LRTransition(33, TLRActionType(3), 23),
      LRTransition(34, TLRActionType(3), 48)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(15, TLRActionType(2), 9)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(2), 14),
      LRTransition(8, TLRActionType(2), 14),
      LRTransition(9, TLRActionType(2), 14),
      LRTransition(10, TLRActionType(2), 14),
      LRTransition(11, TLRActionType(2), 14),
      LRTransition(12, TLRActionType(2), 14),
      LRTransition(13, TLRActionType(2), 14),
      LRTransition(15, TLRActionType(2), 14),
      LRTransition(16, TLRActionType(2), 14),
      LRTransition(17, TLRActionType(2), 14),
      LRTransition(18, TLRActionType(2), 14),
      LRTransition(19, TLRActionType(2), 14),
      LRTransition(20, TLRActionType(2), 14),
      LRTransition(22, TLRActionType(2), 14),
      LRTransition(28, TLRActionType(2), 14)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(23, TLRActionType(1), 49)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(1), 28),
      LRTransition(9, TLRActionType(1), 29),
      LRTransition(10, TLRActionType(1), 30),
      LRTransition(12, TLRActionType(1), 31),
      LRTransition(13, TLRActionType(1), 32),
      LRTransition(16, TLRActionType(1), 33),
      LRTransition(17, TLRActionType(1), 34),
      LRTransition(18, TLRActionType(1), 35),
      LRTransition(19, TLRActionType(1), 36),
      LRTransition(20, TLRActionType(1), 37),
      LRTransition(37, TLRActionType(3), 39),
      LRTransition(8, TLRActionType(2), 15),
      LRTransition(11, TLRActionType(2), 15),
      LRTransition(15, TLRActionType(2), 15),
      LRTransition(22, TLRActionType(2), 15),
      LRTransition(28, TLRActionType(2), 15)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(7, TLRActionType(1), 13),
      LRTransition(21, TLRActionType(1), 14),
      LRTransition(24, TLRActionType(1), 15),
      LRTransition(26, TLRActionType(1), 16),
      LRTransition(27, TLRActionType(1), 17),
      LRTransition(29, TLRActionType(1), 18),
      LRTransition(32, TLRActionType(3), 19),
      LRTransition(33, TLRActionType(3), 50)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(8, TLRActionType(2), 12)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(15, TLRActionType(2), 7)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(6, TLRActionType(1), 28),
      LRTransition(9, TLRActionType(1), 29),
      LRTransition(10, TLRActionType(1), 30),
      LRTransition(12, TLRActionType(1), 31),
      LRTransition(13, TLRActionType(1), 32),
      LRTransition(16, TLRActionType(1), 33),
      LRTransition(17, TLRActionType(1), 34),
      LRTransition(18, TLRActionType(1), 35),
      LRTransition(19, TLRActionType(1), 36),
      LRTransition(20, TLRActionType(1), 37),
      LRTransition(22, TLRActionType(1), 51),
      LRTransition(37, TLRActionType(3), 39)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(25, TLRActionType(1), 1),
      LRTransition(27, TLRActionType(1), 2),
      LRTransition(30, TLRActionType(1), 3),
      LRTransition(31, TLRActionType(3), 4),
      LRTransition(35, TLRActionType(3), 5),
      LRTransition(36, TLRActionType(3), 6),
      LRTransition(39, TLRActionType(3), 7),
      LRTransition(40, TLRActionType(3), 52),
      LRTransition(41, TLRActionType(3), 9),
      LRTransition(23, TLRActionType(2), 1)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(23, TLRActionType(1), 53)
    ]));
    FLALR.AddState(TLRState.Create([
      LRTransition(15, TLRActionType(2), 8)
    ]));

    FDFA.SetInitialState(0);
    FLALR.SetInitialState(0);

    FLALR.AddRule(LRRule(40, [39, 15, 40]));
    FLALR.AddRule(LRRule(40, []));
    FLALR.AddRule(LRRule(39, [31]));
    FLALR.AddRule(LRRule(39, [41]));
    FLALR.AddRule(LRRule(39, [35]));
    FLALR.AddRule(LRRule(39, [36]));
    FLALR.AddRule(LRRule(31, [27, 14, 33]));
    FLALR.AddRule(LRRule(41, [30, 33, 22, 40, 23]));
    FLALR.AddRule(LRRule(35, [25, 27, 14, 33, 28, 33, 22, 40, 23]));
    FLALR.AddRule(LRRule(36, [27, 7, 38, 8]));
    FLALR.AddRule(LRRule(38, [34]));
    FLALR.AddRule(LRRule(38, []));
    FLALR.AddRule(LRRule(34, [33, 11, 34]));
    FLALR.AddRule(LRRule(34, [33]));
    FLALR.AddRule(LRRule(33, [7, 33, 8]));
    FLALR.AddRule(LRRule(33, [33, 37, 33]));
    FLALR.AddRule(LRRule(33, [32]));
    FLALR.AddRule(LRRule(33, [27]));
    FLALR.AddRule(LRRule(37, [10]));
    FLALR.AddRule(LRRule(37, [12]));
    FLALR.AddRule(LRRule(37, [9]));
    FLALR.AddRule(LRRule(37, [13]));
    FLALR.AddRule(LRRule(37, [18]));
    FLALR.AddRule(LRRule(37, [6]));
    FLALR.AddRule(LRRule(37, [16]));
    FLALR.AddRule(LRRule(37, [19]));
    FLALR.AddRule(LRRule(37, [20]));
    FLALR.AddRule(LRRule(37, [17]));
    FLALR.AddRule(LRRule(32, [21]));
    FLALR.AddRule(LRRule(32, [26]));
    FLALR.AddRule(LRRule(32, [29]));
    FLALR.AddRule(LRRule(32, [24]));

    FDFA.AddGroup(Group('Comment Line', 2, 5, 3, gaCharwise, geOpen, []));

    Prepare(SymbolList);
  finally
    SymbolList.Free;
  end;
end;


end.

